{"version":3,"sources":["src/routes/router.js","src/main.js"],"names":["defaultRedirect","redirect","name","template","render","console","log","Router","routerArr","pathArr","map","k","path","filter","hashHistory","init","bindEvent","window","addEventListener","e","url","spliceHash","newURL","currentRoute","element","hasIndex","indexOf","location","hash","document","querySelector","innerHTML","history","back","hashIndex","str","substr","arr","index","Array","isArray","module","exports","title","router"],"mappings":"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","file":"main.c42ec3ec.map","sourceRoot":"..","sourcesContent":["defaultRedirect = {\n  redirect: '/404',\n  name: '404',\n  template: `<div>404 not found</div>`,\n  render:()=>{console.log('404 NOT FOUND')}\n};\n\nclass Router {\n  constructor(routerArr) {\n    this.routerArr = routerArr;\n    this.pathArr = routerArr.map(k => k.path);\n    this.redirect = routerArr.filter(k => (k.redirect));\n    this.hashHistory = [];\n    this.init();\n  }\n\n  init() {\n    // todo 初始化没有判断hash的问题\n    this.bindEvent();\n  }\n\n  bindEvent() {\n    window.addEventListener('hashchange', (e) => {\n      const url = spliceHash(e.newURL);\n      let currentRoute, element;\n      if (hasIndex(this.pathArr, url)) {\n        currentRoute = this.routerArr[(this.pathArr.indexOf(url))];\n      } else {\n        // 重定向到默认\n        currentRoute = this.redirect[0];\n        if (!currentRoute) {\n          currentRoute = defaultRedirect;\n        }\n        // todo 两次触发404 render的问题\n        window.location.hash = currentRoute.redirect;\n      }\n      element = currentRoute.template;\n      // 渲染dom\n      document.querySelector('body').innerHTML = element;\n      // 触发render钩子\n      if (currentRoute.render) currentRoute.render();\n\n    });\n  }\n\n  // 跳转到路由\n  push(url) {\n    window.location.hash = url;\n  }\n\n  goBack() {\n    window.history.back();\n  }\n}\n\n\nfunction spliceHash(url) {\n  const hashIndex = url.indexOf('#');\n  const str = url.substr(hashIndex + 1);\n  return str;\n}\n\nfunction hasIndex(arr, index) {\n  if (!Array.isArray(arr)) return;\n  return arr.indexOf(index) >= 0;\n}\n\n\nmodule.exports = Router;","import Router from './routes/router';\n\nconst routerArr = [\n  {\n    path: '/',\n    name: 'index',\n    title: '主页',\n    template: `<div>主页</div>`,\n    render: () => {console.log('render index');}\n  },\n  {\n    path: '/list',\n    name: 'list',\n    title: '列表',\n    template: `<div>列表页</div>`,\n    render: () => {console.log('render list');}\n  }];\n\nconst router = new Router(routerArr);"]}